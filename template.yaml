AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Reference-Service-Deployment-Descriptor


Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: java11
    MemorySize: 1024
    Timeout: 20
    AutoPublishAlias: !Ref Stage
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    CodeUri: ./application
    Tags:
      Stage: !Ref Stage
      Service: References
      Resource: Lambda
    Environment:
      Variables:
        TABLE: !Ref ReferencesTable
        APPLICATION_ENVIRONMENT: !Ref Stage
        CLOUD_REGION: us-east-1
        MAIN_CLASS: com.tekcapzule.references.application.ReferencesApplication
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:

  # Setup API Gateway

  ReferencesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "references-${Stage}"
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For, Content-Type, Authorization, X-User-Login, X-Channel-Code'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      Variables:
        LAMBDA_ALIAS: !Ref Stage

  # Setup DynamoDB Table

  ReferencesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}References"
      AttributeDefinitions:
        - AttributeName: referenceId
          AttributeType: S
        - AttributeName: topicCode
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: level
          AttributeType: S
        - AttributeName: duration
          AttributeType: S
        - AttributeName: tags
          AttributeType: S
      KeySchema:
        - AttributeName: referenceId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: topicGSI
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: topicCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: levelGSI
          KeySchema:
            - AttributeName: level
              KeyType: HASH
            - AttributeName: topicCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: durationGSI
          KeySchema:
            - AttributeName: duration
              KeyType: HASH
            - AttributeName: topicCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: tagGSI
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: tags
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  # Setup Lambda Functions

  CreateReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-CreateReference"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/create
            Method: post
            RestApiId:
              Ref: ReferencesApi

  UpdateReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-UpdateReference"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/update
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetReference"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/get
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetAllReferencesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetAllReferences"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/getAll
            Method: post
            RestApiId:
              Ref: ReferencesApi

  RecommendReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-RecommendReference"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: recommendFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/recommend
            Method: post
            RestApiId:
              Ref: ReferencesApi

  ApproveReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-ApproveReference"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: approveFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/approve
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetReferenceByTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetReferenceByTopic"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getByTopicFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/getByTopic
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetReferenceByTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetReferenceByTags"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getByTagsFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/getByTag
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetReferenceByDurationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetReferenceByDuration"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getByDurationFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/getByDuration
            Method: post
            RestApiId:
              Ref: ReferencesApi

  GetReferenceByLevelFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Reference-GetReferenceByLevel"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReferencesTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getByLevelFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: reference/getByLevel
            Method: post
            RestApiId:
              Ref: ReferencesApi


  # Set Output Variable

Outputs:
  ApiEndpoint:
    Description: "References API endpoint."
    Value: !Sub "https://${ReferencesApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/references"
